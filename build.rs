use copy_to_output::copy_to_output;
use std::{
    env,
    fs::{self, File},
    io::Write,
    path::Path,
};

fn main() -> std::io::Result<()> {
    if cfg!(target_os = "linux") {
        println!("cargo:rustc-link-lib=vulkan");
    }

    println!("cargo:rerun-if-changed=resource/*");
    copy_to_output("resource", &env::var("PROFILE").unwrap()).expect("Could not copy");

    let mut block_names = fs::read_dir(Path::new("./").join("resource").join("block"))
        .unwrap()
        .filter_map(|dir| {
            let dir_entry = dir.unwrap();
            if dir_entry.file_type().unwrap().is_file() {
                dir_entry
                    .file_name()
                    .to_string_lossy()
                    .split(".")
                    .next()
                    .map(|file_name| file_name.to_string() + ".yaml")
            } else {
                None
            }
        })
        .collect::<Vec<_>>();
    block_names.sort();

    let mut texture_names = fs::read_dir(Path::new("./").join("resource").join("texture"))
        .unwrap()
        .filter_map(|dir| {
            let dir_entry = dir.unwrap();
            if dir_entry.file_type().unwrap().is_file() {
                dir_entry
                    .file_name()
                    .to_string_lossy()
                    .split(".")
                    .next()
                    .map(|file_name| file_name.to_string())
            } else {
                None
            }
        })
        .collect::<Vec<_>>();
    texture_names.sort();

    let mut text_out = Vec::new();

    writeln!(&mut text_out, "// This file contains an autogenerated list of files found in the ./resource/block and ./resource/texture/ directories")?;
    writeln!(&mut text_out)?;
    writeln!(
        &mut text_out,
        "pub const TEXTURE_NAMES: [&'static str; {:}] = {:?};",
        texture_names.len(),
        texture_names
    )?;
    writeln!(
        &mut text_out,
        "pub const BLOCK_NAMES: [&'static str; {:}] = {:?};",
        block_names.len(),
        block_names
    )?;

    File::create(
        Path::new("./")
            .join("src")
            .join("game")
            .join("world")
            .join("resource_list.rs"),
    )?
    .write_all(&text_out)?;

    Ok(())
}
